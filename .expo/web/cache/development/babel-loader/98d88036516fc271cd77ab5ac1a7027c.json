{"ast":null,"code":"import genre from \"../data/genres.json\";\nexport var convertTypeWithGenre = function convertTypeWithGenre(arr, type, isSearch) {\n  if (type === 'normal' || isSearch) {\n    if (arr.length > 1) return genre[arr[0]].name + \", \" + genre[arr[1]].name;\n    return arr.length !== 0 ? \"\" + genre[arr[0]].name : '';\n  }\n\n  return arr.length !== 0 && type !== genre[arr[0]].name ? type + \", \" + genre[arr[0]].name : type;\n};\nexport var convertToGenres = function convertToGenres(genre) {\n  var messageNotFound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Uninformed';\n  return genre.length > 0 ? genre.length > 1 ? genre[0].name + \", \" + genre[1].name : genre[0].name : messageNotFound;\n};","map":{"version":3,"sources":["C:/distribuidas/apps/sarasapp/app/utils/genre.js"],"names":["genre","convertTypeWithGenre","arr","type","isSearch","length","name","convertToGenres","messageNotFound"],"mappings":"AAAA,OAAOA,KAAP;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAMC,IAAN,EAAYC,QAAZ,EAAyB;AAC3D,MAAID,IAAI,KAAK,QAAT,IAAqBC,QAAzB,EAAmC;AACjC,QAAIF,GAAG,CAACG,MAAJ,GAAa,CAAjB,EAAoB,OAAUL,KAAK,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAL,CAAcI,IAAxB,UAAiCN,KAAK,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAL,CAAcI,IAA/C;AACpB,WAAOJ,GAAG,CAACG,MAAJ,KAAe,CAAf,QAAsBL,KAAK,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAL,CAAcI,IAApC,GAA6C,EAApD;AACD;;AAED,SAAOJ,GAAG,CAACG,MAAJ,KAAe,CAAf,IAAoBF,IAAI,KAAKH,KAAK,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAL,CAAcI,IAA3C,GACAH,IADA,UACSH,KAAK,CAACE,GAAG,CAAC,CAAD,CAAJ,CAAL,CAAcI,IADvB,GAEHH,IAFJ;AAGD,CATM;AAWP,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACP,KAAD;AAAA,MAAQQ,eAAR,uEAA0B,YAA1B;AAAA,SAC7BR,KAAK,CAACK,MAAN,GAAe,CAAf,GACIL,KAAK,CAACK,MAAN,GAAe,CAAf,GACKL,KAAK,CAAC,CAAD,CAAL,CAASM,IADd,UACuBN,KAAK,CAAC,CAAD,CAAL,CAASM,IADhC,GAEEN,KAAK,CAAC,CAAD,CAAL,CAASM,IAHf,GAIIE,eALyB;AAAA,CAAxB","sourcesContent":["import genre from '../data/genres.json';\n\nexport const convertTypeWithGenre = (arr, type, isSearch) => {\n  if (type === 'normal' || isSearch) {\n    if (arr.length > 1) return `${genre[arr[0]].name}, ${genre[arr[1]].name}`;\n    return arr.length !== 0 ? `${genre[arr[0]].name}` : '';\n  }\n\n  return arr.length !== 0 && type !== genre[arr[0]].name\n    ? `${type}, ${genre[arr[0]].name}`\n    : type;\n};\n\nexport const convertToGenres = (genre, messageNotFound = 'Uninformed') =>\n  genre.length > 0\n    ? genre.length > 1\n      ? `${genre[0].name}, ${genre[1].name}`\n      : genre[0].name\n    : messageNotFound;\n"]},"metadata":{},"sourceType":"module"}