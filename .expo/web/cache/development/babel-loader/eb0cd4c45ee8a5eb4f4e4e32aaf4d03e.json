{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageZoomState = exports.ImageZoomProps = void 0;\n\nvar ImageZoomProps = function () {\n  function ImageZoomProps() {\n    this.cropWidth = 100;\n    this.cropHeight = 100;\n    this.imageWidth = 100;\n    this.imageHeight = 100;\n    this.panToMove = true;\n    this.pinchToZoom = true;\n    this.enableDoubleClickZoom = true;\n    this.clickDistance = 10;\n    this.maxOverflow = 100;\n    this.longPressTime = 800;\n    this.doubleClickInterval = 175;\n    this.style = {};\n    this.swipeDownThreshold = 230;\n    this.enableSwipeDown = false;\n    this.enableCenterFocus = true;\n    this.useHardwareTextureAndroid = true;\n    this.minScale = 0.6;\n    this.maxScale = 10;\n    this.useNativeDriver = false;\n\n    this.onClick = function () {};\n\n    this.onDoubleClick = function () {};\n\n    this.onLongPress = function () {};\n\n    this.horizontalOuterRangeOffset = function () {};\n\n    this.onDragLeft = function () {};\n\n    this.responderRelease = function () {};\n\n    this.onMove = function () {};\n\n    this.layoutChange = function () {};\n\n    this.onSwipeDown = function () {};\n\n    this.onStartShouldSetPanResponder = function () {\n      return true;\n    };\n\n    this.onPanResponderTerminationRequest = function () {\n      return false;\n    };\n  }\n\n  return ImageZoomProps;\n}();\n\nexports.ImageZoomProps = ImageZoomProps;\n\nvar ImageZoomState = function () {\n  function ImageZoomState() {\n    this.centerX = 0.5;\n    this.centerY = 0.5;\n  }\n\n  return ImageZoomState;\n}();\n\nexports.ImageZoomState = ImageZoomState;","map":{"version":3,"sources":["../../src/image-zoom/image-zoom.type.ts"],"names":[],"mappings":";;;;;;;AAwBA,IAAA,cAAA,GAAA,YAAA;AAAA,WAAA,cAAA,GAAA;AAIS,SAAA,SAAA,GAAoB,GAApB;AAKA,SAAA,UAAA,GAAqB,GAArB;AAKA,SAAA,UAAA,GAAqB,GAArB;AAKA,SAAA,WAAA,GAAsB,GAAtB;AAKA,SAAA,SAAA,GAAsB,IAAtB;AAKA,SAAA,WAAA,GAAwB,IAAxB;AAKA,SAAA,qBAAA,GAAkC,IAAlC;AAKA,SAAA,aAAA,GAAyB,EAAzB;AAKA,SAAA,WAAA,GAAuB,GAAvB;AAKA,SAAA,aAAA,GAAyB,GAAzB;AAKA,SAAA,mBAAA,GAA+B,GAA/B;AAQA,SAAA,KAAA,GAAoB,EAApB;AAKA,SAAA,kBAAA,GAA8B,GAA9B;AAKA,SAAA,eAAA,GAA4B,KAA5B;AAKA,SAAA,iBAAA,GAA8B,IAA9B;AAKA,SAAA,yBAAA,GAAsC,IAAtC;AAKA,SAAA,QAAA,GAAoB,GAApB;AAKA,SAAA,QAAA,GAAoB,EAApB;AAMA,SAAA,eAAA,GAA4B,KAA5B;;AAKA,SAAA,OAAA,GAA4C,YAAA,CAElD,CAFM;;AAOA,SAAA,aAAA,GAAkD,YAAA,CAExD,CAFM;;AAOA,SAAA,WAAA,GAAgD,YAAA,CAEtD,CAFM;;AAQA,SAAA,0BAAA,GAAyD,YAAA,CAE/D,CAFM;;AAOA,SAAA,UAAA,GAA0B,YAAA,CAEhC,CAFM;;AAOA,SAAA,gBAAA,GAAyD,YAAA,CAE/D,CAFM;;AAOA,SAAA,MAAA,GAAuC,YAAA,CAE7C,CAFM;;AAOA,SAAA,YAAA,GAAoD,YAAA,CAE1D,CAFM;;AAOA,SAAA,WAAA,GAA2B,YAAA,CAEjC,CAFM;;AAgBA,SAAA,4BAAA,GAGQ,YAAA;AAAM,aAAA,IAAA;AAAI,KAHlB;;AASA,SAAA,gCAAA,GAGQ,YAAA;AAAM,aAAA,KAAA;AAAK,KAHnB;AAIR;;AAAD,SAAA,cAAA;AAAC,CA7LD,EAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA;;AA+Lb,IAAA,cAAA,GAAA,YAAA;AAAA,WAAA,cAAA,GAAA;AAIS,SAAA,OAAA,GAAmB,GAAnB;AAIA,SAAA,OAAA,GAAmB,GAAnB;AACR;;AAAD,SAAA,cAAA;AAAC,CATD,EAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImageZoomState = exports.ImageZoomProps = void 0;\nvar ImageZoomProps = /** @class */ (function () {\n    function ImageZoomProps() {\n        /**\n         * 操作区域宽度\n         */\n        this.cropWidth = 100;\n        /**\n         * 操作区域高度\n         */\n        this.cropHeight = 100;\n        /**\n         * 图片宽度\n         */\n        this.imageWidth = 100;\n        /**\n         * 图片高度\n         */\n        this.imageHeight = 100;\n        /**\n         * 单手是否能移动图片\n         */\n        this.panToMove = true;\n        /**\n         * 多手指是否能缩放\n         */\n        this.pinchToZoom = true;\n        /**\n         * 双击能否放大\n         */\n        this.enableDoubleClickZoom = true;\n        /**\n         * 单击最大位移\n         */\n        this.clickDistance = 10;\n        /**\n         * 最大滑动阈值\n         */\n        this.maxOverflow = 100;\n        /**\n         * 长按的阈值（毫秒）\n         */\n        this.longPressTime = 800;\n        /**\n         * 双击计时器最大间隔\n         */\n        this.doubleClickInterval = 175;\n        this.style = {};\n        /**\n         * threshold for firing swipe down function\n         */\n        this.swipeDownThreshold = 230;\n        /**\n         * for enabling vertical movement if user doesn't want it\n         */\n        this.enableSwipeDown = false;\n        /**\n         * for disabling focus on image center if user doesn't want it\n         */\n        this.enableCenterFocus = true;\n        /**\n         * for disabling rendering to hardware texture on Android\n         */\n        this.useHardwareTextureAndroid = true;\n        /**\n         * minimum zoom scale\n         */\n        this.minScale = 0.6;\n        /**\n         * maximum zoom scale\n         */\n        this.maxScale = 10;\n        /**\n         * 是否启用原生动画驱动\n         * Whether to use native code to perform animations.\n         */\n        this.useNativeDriver = false;\n        /**\n         * 单击的回调\n         */\n        this.onClick = function () {\n            //\n        };\n        /**\n         * 双击的回调\n         */\n        this.onDoubleClick = function () {\n            //\n        };\n        /**\n         * 长按的回调\n         */\n        this.onLongPress = function () {\n            //\n        };\n        /**\n         * 横向超出的距离，父级做图片切换时，可以监听这个函数\n         * 当此函数触发时，可以做切换操作\n         */\n        this.horizontalOuterRangeOffset = function () {\n            //\n        };\n        /**\n         * 触发想切换到左边的图，向左滑动速度超出阈值时触发\n         */\n        this.onDragLeft = function () {\n            //\n        };\n        /**\n         * 松手但是没有取消看图的回调\n         */\n        this.responderRelease = function () {\n            //\n        };\n        /**\n         * If provided, this will be called everytime the map is moved\n         */\n        this.onMove = function () {\n            //\n        };\n        /**\n         * If provided, this method will be called when the onLayout event fires\n         */\n        this.layoutChange = function () {\n            //\n        };\n        /**\n         * function that fires when user swipes down\n         */\n        this.onSwipeDown = function () {\n            //\n        };\n        /**\n         * Allows overriding the default onStartShouldSetPanResponder behavior.\n         * By default, always becomes the responder\n         */\n        this.onStartShouldSetPanResponder = function () { return true; };\n        /**\n         * Allows overriding the default onPanResponderTerminationRequest behavior.\n         * By default, doesn't terminate until the press ends\n         */\n        this.onPanResponderTerminationRequest = function () { return false; };\n    }\n    return ImageZoomProps;\n}());\nexports.ImageZoomProps = ImageZoomProps;\nvar ImageZoomState = /** @class */ (function () {\n    function ImageZoomState() {\n        /**\n         * 中心 x 坐标\n         */\n        this.centerX = 0.5;\n        /**\n         * 中心 y 坐标\n         */\n        this.centerY = 0.5;\n    }\n    return ImageZoomState;\n}());\nexports.ImageZoomState = ImageZoomState;\n//# sourceMappingURL=image-zoom.type.js.map"]},"metadata":{},"sourceType":"script"}