{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\distribuidas\\\\apps\\\\sarasapp\\\\app\\\\screens\\\\MovieList\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Asset } from 'expo-asset';\nimport { Feather } from '@expo/vector-icons';\nimport { Assets as StackAssets } from 'react-navigation-stack';\nimport Screen from \"../../components/common/Screen\";\nimport Spinner from \"../../components/common/Spinner\";\nimport NotificationCard from \"../../components/cards/NotificationCard\";\nimport FilterModal from \"../../components/modals/FilterModal\";\nimport MovieListRow from \"../../components/cards/rows/MovieListRow\";\nimport MovieRow from \"../../components/cards/rows/MovieRow\";\nimport { TouchableOpacity } from \"../../components/common/TouchableOpacity\";\nimport request from \"../../services/api\";\nimport { getItem } from \"../../utils/asyncStorage\";\nimport { getTodayDate } from \"../../utils/dates\";\nimport { darkBlue } from \"../../utils/colors\";\nimport styles from \"./styles\";\n\nvar MovieList = function MovieList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoadingMore = _useState6[0],\n      setIsLoadingMore = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isRefresh = _useState8[0],\n      setIsRefresh = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isError = _useState10[0],\n      setIsError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hasAdultContent = _useState12[0],\n      setHasAdultContent = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      results = _useState14[0],\n      setResults = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      totalPages = _useState16[0],\n      setTotalPages = _useState16[1];\n\n  var _useState17 = useState(1),\n      _useState18 = _slicedToArray(_useState17, 2),\n      page = _useState18[0],\n      setPage = _useState18[1];\n\n  var _useState19 = useState({\n    filterType: 'popularity.desc',\n    filterName: 'Most popular'\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      filter = _useState20[0],\n      setFilter = _useState20[1];\n\n  var _useState21 = useState({\n    numColumns: 1,\n    keyGrid: 1\n  }),\n      _useState22 = _slicedToArray(_useState21, 2),\n      view = _useState22[0],\n      setView = _useState22[1];\n\n  var _navigation$state$par = navigation.state.params;\n  _navigation$state$par = _navigation$state$par === void 0 ? {} : _navigation$state$par;\n  var _navigation$state$par2 = _navigation$state$par.id,\n      id = _navigation$state$par2 === void 0 ? null : _navigation$state$par2,\n      _navigation$state$par3 = _navigation$state$par.name,\n      name = _navigation$state$par3 === void 0 ? null : _navigation$state$par3,\n      _navigation$state$par4 = _navigation$state$par.typeRequest,\n      typeRequest = _navigation$state$par4 === void 0 ? 'discover' : _navigation$state$par4;\n  useEffect(function () {\n    (function _callee() {\n      var adultContentStorage;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              Asset.loadAsync(StackAssets);\n              navigation.setParams({\n                handleFilter: handleFilter\n              });\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getItem('@ConfigKey', 'hasAdultContent'));\n\n            case 5:\n              adultContentStorage = _context.sent;\n              setHasAdultContent(adultContentStorage);\n              requestMoviesList();\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              requestMoviesList();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    })();\n  }, []);\n\n  requestMoviesList = function requestMoviesList() {\n    var filterType, dateRelease, data;\n    return _regeneratorRuntime.async(function requestMoviesList$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setIsLoading(true);\n            filterType = filter.filterType;\n            dateRelease = getTodayDate();\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(request(typeRequest + \"/movie\", _objectSpread({\n              page: page,\n              'release_date.lte': dateRelease,\n              sort_by: filterType,\n              with_release_type: '1|2|3|4|5|6|7',\n              include_adult: hasAdultContent\n            }, getQueryRequest())));\n\n          case 6:\n            data = _context2.sent;\n            setIsLoading(false);\n            setIsLoadingMore(false);\n            setIsRefresh(false);\n            setIsError(false);\n            setTotalPages(data.total_pages);\n            setResults(isRefresh ? data.results : [].concat(_toConsumableArray(results), _toConsumableArray(data.results)));\n            _context2.next = 21;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](0);\n            setIsLoading(false);\n            setIsLoadingMore(false);\n            setIsRefresh(false);\n            setIsError(true);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  getQueryRequest = function getQueryRequest() {\n    if (typeRequest === 'discover') {\n      return id ? {\n        with_genres: \"\" + id\n      } : null;\n    }\n\n    if (typeRequest === 'search') {\n      return {\n        query: \"\" + name.trim()\n      };\n    }\n\n    return null;\n  };\n\n  renderItem = function renderItem(item, type, isSearch, numColumns, navigate) {\n    return React.createElement(MovieRow, {\n      item: item,\n      type: type,\n      isSearch: isSearch,\n      numColumns: numColumns,\n      navigate: navigate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    });\n  };\n\n  renderFooter = function renderFooter() {\n    if (isLoadingMore) return React.createElement(Spinner, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }\n    });\n\n    if (totalPages !== page && results.length > 0) {\n      return React.createElement(View, {\n        style: styles.loadingMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.loadingButton,\n        onPress: handleLoadMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.loadingText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, \"Load more\")));\n    }\n\n    if (results.length > 0) return React.createElement(View, {\n      style: styles.loadingMore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 36\n      }\n    });\n    return null;\n  };\n\n  handleRefresh = function handleRefresh() {\n    return _regeneratorRuntime.async(function handleRefresh$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(setIsRefresh(true));\n\n          case 2:\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(setPage(1));\n\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(requestMoviesList());\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  handleLoadMore = function handleLoadMore() {\n    return _regeneratorRuntime.async(function handleLoadMore$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(setIsLoadingMore(true));\n\n          case 2:\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(setPage(page + 1));\n\n          case 4:\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(requestMoviesList());\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  handleGrid = function handleGrid() {\n    var numColumns = view.numColumns,\n        keyGrid = view.keyGrid;\n    setView({\n      numColumns: numColumns === 1 ? 2 : 1,\n      keyGrid: keyGrid + 1\n    });\n  };\n\n  handleFilter = function handleFilter() {\n    setIsVisible(!isVisible);\n  };\n\n  handleSwitchMovie = function handleSwitchMovie(type, name, visible) {\n    var filterType;\n    return _regeneratorRuntime.async(function handleSwitchMovie$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            filterType = filter.filterType;\n\n            if (!(type !== filterType)) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(setPage(1));\n\n          case 4:\n            _context5.next = 6;\n            return _regeneratorRuntime.awrap(setResults([]));\n\n          case 6:\n            _context5.next = 8;\n            return _regeneratorRuntime.awrap(setFilter({\n              filterType: type,\n              filterName: name\n            }));\n\n          case 8:\n            _context5.next = 10;\n            return _regeneratorRuntime.awrap(setIsVisible(visible));\n\n          case 10:\n            _context5.next = 12;\n            return _regeneratorRuntime.awrap(requestMoviesList());\n\n          case 12:\n            _context5.next = 15;\n            break;\n\n          case 14:\n            setIsVisible(visible);\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var navigate = navigation.navigate;\n  var filterName = filter.filterName;\n  var numColumns = view.numColumns,\n      keyGrid = view.keyGrid;\n  return React.createElement(Screen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, isLoading && !isRefresh && !isLoadingMore ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }) : isError ? React.createElement(NotificationCard, {\n    icon: \"alert-octagon\",\n    onPress: requestMoviesList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }) : results.length === 0 ? React.createElement(NotificationCard, {\n    icon: \"thumbs-down\",\n    textError: \"No results available.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: styles.containerList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, results.length > 0 && React.createElement(View, {\n    style: styles.containerMainText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.textMain,\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, typeRequest === 'discover' ? filterName : name), React.createElement(TouchableOpacity, {\n    style: [styles.buttonGrid, numColumns === 2 && styles.buttonGridActive],\n    onPress: handleGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, React.createElement(Feather, {\n    name: \"grid\",\n    size: 22,\n    color: darkBlue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }))), React.createElement(MovieListRow, {\n    data: results,\n    type: \"normal\",\n    isSearch: false,\n    keyGrid: keyGrid,\n    numColumns: numColumns,\n    refreshing: isRefresh,\n    onRefresh: handleRefresh,\n    ListFooterComponent: renderFooter,\n    navigate: navigate,\n    renderItem: renderItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), React.createElement(FilterModal, {\n    isVisible: isVisible,\n    filter: filter,\n    onVisible: handleFilter,\n    onFilter: handleSwitchMovie,\n    style: styles.bottomModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  })));\n};\n\nMovieList.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _ref3 = navigation.state.params || {},\n      handleFilter = _ref3.handleFilter,\n      name = _ref3.name,\n      routeName = _ref3.routeName,\n      _ref3$typeRequest = _ref3.typeRequest,\n      typeRequest = _ref3$typeRequest === void 0 ? 'discover' : _ref3$typeRequest;\n\n  return {\n    title: name || routeName,\n    headerRight: typeRequest === 'discover' && React.createElement(TouchableOpacity, {\n      style: styles.buttonFilter,\n      onPress: handleFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, React.createElement(Feather, {\n      name: \"filter\",\n      size: 23,\n      color: darkBlue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nexport default MovieList;","map":{"version":3,"sources":["C:/distribuidas/apps/sarasapp/app/screens/MovieList/index.js"],"names":["React","useState","useEffect","Asset","Feather","Assets","StackAssets","Screen","Spinner","NotificationCard","FilterModal","MovieListRow","MovieRow","TouchableOpacity","request","getItem","getTodayDate","darkBlue","styles","MovieList","navigation","isVisible","setIsVisible","isLoading","setIsLoading","isLoadingMore","setIsLoadingMore","isRefresh","setIsRefresh","isError","setIsError","hasAdultContent","setHasAdultContent","results","setResults","totalPages","setTotalPages","page","setPage","filterType","filterName","filter","setFilter","numColumns","keyGrid","view","setView","state","params","id","name","typeRequest","loadAsync","setParams","handleFilter","adultContentStorage","requestMoviesList","dateRelease","sort_by","with_release_type","include_adult","getQueryRequest","data","total_pages","with_genres","query","trim","renderItem","item","type","isSearch","navigate","renderFooter","length","loadingMore","loadingButton","handleLoadMore","loadingText","handleRefresh","handleGrid","handleSwitchMovie","visible","container","containerList","containerMainText","textMain","buttonGrid","buttonGridActive","bottomModal","navigationOptions","routeName","title","headerRight","buttonFilter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport { Asset } from 'expo-asset';\nimport { Feather } from '@expo/vector-icons';\nimport { Assets as StackAssets } from 'react-navigation-stack';\n\nimport Screen from '../../components/common/Screen';\nimport Spinner from '../../components/common/Spinner';\nimport NotificationCard from '../../components/cards/NotificationCard';\nimport FilterModal from '../../components/modals/FilterModal';\nimport MovieListRow from '../../components/cards/rows/MovieListRow';\nimport MovieRow from '../../components/cards/rows/MovieRow';\nimport { TouchableOpacity } from '../../components/common/TouchableOpacity';\n\nimport request from '../../services/api';\n\nimport { getItem } from '../../utils/asyncStorage';\nimport { getTodayDate } from '../../utils/dates';\n\nimport { darkBlue } from '../../utils/colors';\n\nimport styles from './styles';\n\nconst MovieList = ({ navigation }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [isRefresh, setIsRefresh] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [hasAdultContent, setHasAdultContent] = useState(false);\n  const [results, setResults] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState({\n    filterType: 'popularity.desc',\n    filterName: 'Most popular'\n  });\n  const [view, setView] = useState({ numColumns: 1, keyGrid: 1 });\n  const {\n    params: { id = null, name = null, typeRequest = 'discover' } = {}\n  } = navigation.state;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        Asset.loadAsync(StackAssets);\n        navigation.setParams({ handleFilter });\n\n        const adultContentStorage = await getItem(\n          '@ConfigKey',\n          'hasAdultContent'\n        );\n\n        setHasAdultContent(adultContentStorage);\n        requestMoviesList();\n      } catch (error) {\n        requestMoviesList();\n      }\n    })();\n  }, []);\n\n  requestMoviesList = async () => {\n    try {\n      setIsLoading(true);\n\n      const { filterType } = filter;\n      const dateRelease = getTodayDate();\n\n      const data = await request(`${typeRequest}/movie`, {\n        page,\n        'release_date.lte': dateRelease,\n        sort_by: filterType,\n        with_release_type: '1|2|3|4|5|6|7',\n        include_adult: hasAdultContent,\n        ...getQueryRequest()\n      });\n\n      setIsLoading(false);\n      setIsLoadingMore(false);\n      setIsRefresh(false);\n      setIsError(false);\n      setTotalPages(data.total_pages);\n      setResults(isRefresh ? data.results : [...results, ...data.results]);\n    } catch (err) {\n      setIsLoading(false);\n      setIsLoadingMore(false);\n      setIsRefresh(false);\n      setIsError(true);\n    }\n  };\n\n  getQueryRequest = () => {\n    if (typeRequest === 'discover') {\n      return id ? { with_genres: `${id}` } : null;\n    }\n\n    if (typeRequest === 'search') {\n      return { query: `${name.trim()}` };\n    }\n\n    return null;\n  };\n\n  renderItem = (item, type, isSearch, numColumns, navigate) => (\n    <MovieRow\n      item={item}\n      type={type}\n      isSearch={isSearch}\n      numColumns={numColumns}\n      navigate={navigate}\n    />\n  );\n\n  renderFooter = () => {\n    if (isLoadingMore) return <Spinner size=\"small\" />;\n\n    if (totalPages !== page && results.length > 0) {\n      return (\n        <View style={styles.loadingMore}>\n          <TouchableOpacity\n            style={styles.loadingButton}\n            onPress={handleLoadMore}\n          >\n            <Text style={styles.loadingText}>Load more</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    if (results.length > 0) return <View style={styles.loadingMore} />;\n\n    return null;\n  };\n\n  handleRefresh = async () => {\n    await setIsRefresh(true);\n    await setPage(1);\n    await requestMoviesList();\n  };\n\n  handleLoadMore = async () => {\n    await setIsLoadingMore(true);\n    await setPage(page + 1);\n    await requestMoviesList();\n  };\n\n  handleGrid = () => {\n    const { numColumns, keyGrid } = view;\n\n    setView({ numColumns: numColumns === 1 ? 2 : 1, keyGrid: keyGrid + 1 });\n  };\n\n  handleFilter = () => {\n    setIsVisible(!isVisible);\n  };\n\n  handleSwitchMovie = async (type, name, visible) => {\n    const { filterType } = filter;\n\n    if (type !== filterType) {\n      await setPage(1);\n      await setResults([]);\n      await setFilter({ filterType: type, filterName: name });\n      await setIsVisible(visible);\n      await requestMoviesList();\n    } else {\n      setIsVisible(visible);\n    }\n  };\n\n  const { navigate } = navigation;\n  const { filterName } = filter;\n  const { numColumns, keyGrid } = view;\n\n  return (\n    <Screen>\n      <View style={styles.container}>\n        {isLoading && !isRefresh && !isLoadingMore ? (\n          <Spinner />\n        ) : isError ? (\n          <NotificationCard icon=\"alert-octagon\" onPress={requestMoviesList} />\n        ) : results.length === 0 ? (\n          <NotificationCard\n            icon=\"thumbs-down\"\n            textError=\"No results available.\"\n          />\n        ) : (\n          <View style={styles.containerList}>\n            {results.length > 0 && (\n              <View style={styles.containerMainText}>\n                <Text style={styles.textMain} numberOfLines={1}>\n                  {typeRequest === 'discover' ? filterName : name}\n                </Text>\n                <TouchableOpacity\n                  style={[\n                    styles.buttonGrid,\n                    numColumns === 2 && styles.buttonGridActive\n                  ]}\n                  onPress={handleGrid}\n                >\n                  <Feather name=\"grid\" size={22} color={darkBlue} />\n                </TouchableOpacity>\n              </View>\n            )}\n            <MovieListRow\n              data={results}\n              type=\"normal\"\n              isSearch={false}\n              keyGrid={keyGrid}\n              numColumns={numColumns}\n              refreshing={isRefresh}\n              onRefresh={handleRefresh}\n              ListFooterComponent={renderFooter}\n              navigate={navigate}\n              renderItem={renderItem}\n            />\n          </View>\n        )}\n        <FilterModal\n          isVisible={isVisible}\n          filter={filter}\n          onVisible={handleFilter}\n          onFilter={handleSwitchMovie}\n          style={styles.bottomModal}\n        />\n      </View>\n    </Screen>\n  );\n};\n\nMovieList.navigationOptions = ({ navigation }) => {\n  const { handleFilter, name, routeName, typeRequest = 'discover' } =\n    navigation.state.params || {};\n\n  return {\n    title: name || routeName,\n    headerRight: typeRequest === 'discover' && (\n      <TouchableOpacity style={styles.buttonFilter} onPress={handleFilter}>\n        <Feather name=\"filter\" size={23} color={darkBlue} />\n      </TouchableOpacity>\n    )\n  };\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}