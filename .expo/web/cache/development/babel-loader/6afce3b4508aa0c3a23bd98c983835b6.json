{"ast":null,"code":"var _jsxFileName = \"C:\\\\distribuidas\\\\apps\\\\sarasapp\\\\app\\\\components\\\\cards\\\\rows\\\\PosterRow\\\\index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport ImagesModal from \"../../../modals/ImagesModal\";\nimport { TouchableOpacity } from \"../../../common/TouchableOpacity\";\nimport { width } from \"../../../../utils/dimensions\";\nimport { getImageApi } from \"../../../../utils/images\";\nimport { getAvarageRating } from \"../../../../utils/rating\";\nimport { ROUTES } from \"../../../../navigation/routes\";\nimport { white } from \"../../../../utils/colors\";\nimport styles from \"./styles\";\n\nvar PosterRow = function PosterRow(_ref) {\n  var title = _ref.title,\n      backdropPath = _ref.backdropPath,\n      voteAverage = _ref.voteAverage,\n      images = _ref.images,\n      video = _ref.video,\n      showImage = _ref.showImage,\n      onPress = _ref.onPress,\n      navigate = _ref.navigate;\n\n  handlePlayVideo = function handlePlayVideo() {\n    var key = video.key;\n    navigate(ROUTES.MOVIE_VIDEO, {\n      key: key\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.containerMainPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: getImageApi(backdropPath),\n    style: styles.mainPhoto,\n    resizeMode: \"cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), video && video.site === 'YouTube' && React.createElement(TouchableOpacity, {\n    style: styles.play,\n    onPress: handlePlayVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"play\",\n    size: width * 0.07,\n    color: white,\n    style: styles.buttonPlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.containerMainPhotoInfo,\n    activeOpacity: images.length ? 0.5 : 1,\n    onPress: images.length ? onPress : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.containerBackgroundPhotoInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.photoInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, title), React.createElement(View, {\n    style: styles.photoStar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, getAvarageRating(voteAverage).map(function (value) {\n    return React.createElement(FontAwesome, {\n      key: value,\n      name: \"star\",\n      size: width * 0.06,\n      color: white,\n      style: styles.star,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    });\n  })))), images.length ? React.createElement(ImagesModal, {\n    showImage: showImage,\n    images: images,\n    onClose: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default PosterRow;","map":{"version":3,"sources":["C:/distribuidas/apps/sarasapp/app/components/cards/rows/PosterRow/index.js"],"names":["React","FontAwesome","ImagesModal","TouchableOpacity","width","getImageApi","getAvarageRating","ROUTES","white","styles","PosterRow","title","backdropPath","voteAverage","images","video","showImage","onPress","navigate","handlePlayVideo","key","MOVIE_VIDEO","containerMainPhoto","mainPhoto","site","play","buttonPlay","containerMainPhotoInfo","length","containerBackgroundPhotoInfo","photoInfo","photoStar","map","value","star"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAOC,WAAP;AACA,SAASC,gBAAT;AAEA,SAASC,KAAT;AACA,SAASC,WAAT;AACA,SAASC,gBAAT;AAEA,SAASC,MAAT;AAEA,SAASC,KAAT;AAEA,OAAOC,MAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OASZ;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,YAOI,QAPJA,YAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJC,EAAAA,eAAe,GAAG,2BAAM;AAAA,QACdC,GADc,GACNL,KADM,CACdK,GADc;AAGtBF,IAAAA,QAAQ,CAACX,MAAM,CAACc,WAAR,EAAqB;AAAED,MAAAA,GAAG,EAAHA;AAAF,KAArB,CAAR;AACD,GAJD;;AAMA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACa,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEjB,WAAW,CAACO,YAAD,CADrB;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACc,SAFhB;AAGE,IAAA,UAAU,EAAC,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGR,KAAK,IAAIA,KAAK,CAACS,IAAN,KAAe,SAAxB,IACC,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEf,MAAM,CAACgB,IAAhC;AAAsC,IAAA,OAAO,EAAEN,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAEf,KAAK,GAAG,IAFhB;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,KAAK,EAAEC,MAAM,CAACiB,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,EAgBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEjB,MAAM,CAACkB,sBADhB;AAEE,IAAA,aAAa,EAAEb,MAAM,CAACc,MAAP,GAAgB,GAAhB,GAAsB,CAFvC;AAGE,IAAA,OAAO,EAAEd,MAAM,CAACc,MAAP,GAAgBX,OAAhB,GAA0B,IAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACoB,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAEpB,MAAM,CAACqB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KADH,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACsB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,gBAAgB,CAACO,WAAD,CAAhB,CAA8BmB,GAA9B,CAAkC,UAAAC,KAAK;AAAA,WACtC,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAE7B,KAAK,GAAG,IAHhB;AAIE,MAAA,KAAK,EAAEI,KAJT;AAKE,MAAA,KAAK,EAAEC,MAAM,CAACyB,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsC;AAAA,GAAvC,CADH,CAJF,CALF,CAhBF,EAsCGpB,MAAM,CAACc,MAAP,GACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEZ,SAAxB;AAAmC,IAAA,MAAM,EAAEF,MAA3C;AAAmD,IAAA,OAAO,EAAEG,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEG,IAxCN,CADF;AA4CD,CA5DD;;AA8DA,eAAeP,SAAf","sourcesContent":["import React from 'react';\nimport { View, Text, Image } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\n\nimport ImagesModal from '../../../modals/ImagesModal';\nimport { TouchableOpacity } from '../../../common/TouchableOpacity';\n\nimport { width } from '../../../../utils/dimensions';\nimport { getImageApi } from '../../../../utils/images';\nimport { getAvarageRating } from '../../../../utils/rating';\n\nimport { ROUTES } from '../../../../navigation/routes';\n\nimport { white } from '../../../../utils/colors';\n\nimport styles from './styles';\n\nconst PosterRow = ({\n  title,\n  backdropPath,\n  voteAverage,\n  images,\n  video,\n  showImage,\n  onPress,\n  navigate\n}) => {\n  handlePlayVideo = () => {\n    const { key } = video;\n\n    navigate(ROUTES.MOVIE_VIDEO, { key });\n  };\n\n  return (\n    <View style={styles.containerMainPhoto}>\n      <Image\n        source={getImageApi(backdropPath)}\n        style={styles.mainPhoto}\n        resizeMode=\"cover\"\n      />\n      {video && video.site === 'YouTube' && (\n        <TouchableOpacity style={styles.play} onPress={handlePlayVideo}>\n          <FontAwesome\n            name=\"play\"\n            size={width * 0.07}\n            color={white}\n            style={styles.buttonPlay}\n          />\n        </TouchableOpacity>\n      )}\n      <TouchableOpacity\n        style={styles.containerMainPhotoInfo}\n        activeOpacity={images.length ? 0.5 : 1}\n        onPress={images.length ? onPress : null}\n      >\n        <View style={styles.containerBackgroundPhotoInfo}>\n          <Text numberOfLines={2} style={styles.photoInfo}>\n            {title}\n          </Text>\n          <View style={styles.photoStar}>\n            {getAvarageRating(voteAverage).map(value => (\n              <FontAwesome\n                key={value}\n                name=\"star\"\n                size={width * 0.06}\n                color={white}\n                style={styles.star}\n              />\n            ))}\n          </View>\n        </View>\n      </TouchableOpacity>\n      {images.length ? (\n        <ImagesModal showImage={showImage} images={images} onClose={onPress} />\n      ) : null}\n    </View>\n  );\n};\n\nexport default PosterRow;\n"]},"metadata":{},"sourceType":"module"}