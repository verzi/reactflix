{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\distribuidas\\\\apps\\\\sarasapp\\\\node_modules\\\\react-native-read-more-text\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar ReadMore = function (_React$Component) {\n  _inherits(ReadMore, _React$Component);\n\n  var _super = _createSuper(ReadMore);\n\n  function ReadMore() {\n    var _this;\n\n    _classCallCheck(this, ReadMore);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      measured: false,\n      shouldShowReadMore: false,\n      showAllText: false\n    };\n\n    _this._handlePressReadMore = function () {\n      _this.setState({\n        showAllText: true\n      });\n    };\n\n    _this._handlePressReadLess = function () {\n      _this.setState({\n        showAllText: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ReadMore, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var fullHeight, limitedHeight;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this._isMounted = true;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(nextFrameAsync());\n\n            case 3:\n              if (this._isMounted) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(measureHeightAsync(this._text));\n\n            case 7:\n              fullHeight = _context.sent;\n              this.setState({\n                measured: true\n              });\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(nextFrameAsync());\n\n            case 11:\n              if (this._isMounted) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(measureHeightAsync(this._text));\n\n            case 15:\n              limitedHeight = _context.sent;\n\n              if (fullHeight > limitedHeight) {\n                this.setState({\n                  shouldShowReadMore: true\n                }, function () {\n                  _this2.props.onReady && _this2.props.onReady();\n                });\n              } else {\n                this.props.onReady && this.props.onReady();\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          measured = _this$state.measured,\n          showAllText = _this$state.showAllText;\n      var numberOfLines = this.props.numberOfLines;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        numberOfLines: measured && !showAllText ? numberOfLines : 0,\n        style: this.props.textStyle,\n        ref: function ref(text) {\n          _this3._text = text;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, this.props.children), this._maybeRenderReadMore());\n    }\n  }, {\n    key: \"_maybeRenderReadMore\",\n    value: function _maybeRenderReadMore() {\n      var _this$state2 = this.state,\n          shouldShowReadMore = _this$state2.shouldShowReadMore,\n          showAllText = _this$state2.showAllText;\n\n      if (shouldShowReadMore && !showAllText) {\n        if (this.props.renderTruncatedFooter) {\n          return this.props.renderTruncatedFooter(this._handlePressReadMore);\n        }\n\n        return React.createElement(Text, {\n          style: styles.button,\n          onPress: this._handlePressReadMore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        }, \"Read more\");\n      } else if (shouldShowReadMore && showAllText) {\n        if (this.props.renderRevealedFooter) {\n          return this.props.renderRevealedFooter(this._handlePressReadLess);\n        }\n\n        return React.createElement(Text, {\n          style: styles.button,\n          onPress: this._handlePressReadLess,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }\n        }, \"Hide\");\n      }\n    }\n  }]);\n\n  return ReadMore;\n}(React.Component);\n\nexport { ReadMore as default };\n\nfunction measureHeightAsync(component) {\n  return new Promise(function (resolve) {\n    component.measure(function (x, y, w, h) {\n      resolve(h);\n    });\n  });\n}\n\nfunction nextFrameAsync() {\n  return new Promise(function (resolve) {\n    return requestAnimationFrame(function () {\n      return resolve();\n    });\n  });\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    color: \"#888\",\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["C:/distribuidas/apps/sarasapp/node_modules/react-native-read-more-text/index.js"],"names":["React","ReadMore","state","measured","shouldShowReadMore","showAllText","_handlePressReadMore","setState","_handlePressReadLess","_isMounted","nextFrameAsync","measureHeightAsync","_text","fullHeight","limitedHeight","props","onReady","numberOfLines","textStyle","text","children","_maybeRenderReadMore","renderTruncatedFooter","styles","button","renderRevealedFooter","Component","component","Promise","resolve","measure","x","y","w","h","requestAnimationFrame","StyleSheet","create","color","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nexport default class ReadMore extends React.Component {\n  state = {\n    measured: false,\n    shouldShowReadMore: false,\n    showAllText: false\n  };\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await nextFrameAsync();\n\n    if (!this._isMounted) {\n      return;\n    }\n\n    // Get the height of the text with no restriction on number of lines\n    const fullHeight = await measureHeightAsync(this._text);\n    this.setState({ measured: true });\n    await nextFrameAsync();\n\n    if (!this._isMounted) {\n      return;\n    }\n\n    // Get the height of the text now that number of lines has been set\n    const limitedHeight = await measureHeightAsync(this._text);\n\n    if (fullHeight > limitedHeight) {\n      this.setState({ shouldShowReadMore: true }, () => {\n        this.props.onReady && this.props.onReady();\n      });\n    } else {\n      this.props.onReady && this.props.onReady();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    let { measured, showAllText } = this.state;\n\n    let { numberOfLines } = this.props;\n\n    return (\n      <View>\n        <Text\n          numberOfLines={measured && !showAllText ? numberOfLines : 0}\n          style={this.props.textStyle}\n          ref={text => {\n            this._text = text;\n          }}\n        >\n          {this.props.children}\n        </Text>\n\n        {this._maybeRenderReadMore()}\n      </View>\n    );\n  }\n\n  _handlePressReadMore = () => {\n    this.setState({ showAllText: true });\n  };\n\n  _handlePressReadLess = () => {\n    this.setState({ showAllText: false });\n  };\n\n  _maybeRenderReadMore() {\n    let { shouldShowReadMore, showAllText } = this.state;\n\n    if (shouldShowReadMore && !showAllText) {\n      if (this.props.renderTruncatedFooter) {\n        return this.props.renderTruncatedFooter(this._handlePressReadMore);\n      }\n\n      return (\n        <Text style={styles.button} onPress={this._handlePressReadMore}>\n          Read more\n        </Text>\n      );\n    } else if (shouldShowReadMore && showAllText) {\n      if (this.props.renderRevealedFooter) {\n        return this.props.renderRevealedFooter(this._handlePressReadLess);\n      }\n\n      return (\n        <Text style={styles.button} onPress={this._handlePressReadLess}>\n          Hide\n        </Text>\n      );\n    }\n  }\n}\n\nfunction measureHeightAsync(component) {\n  return new Promise(resolve => {\n    component.measure((x, y, w, h) => {\n      resolve(h);\n    });\n  });\n}\n\nfunction nextFrameAsync() {\n  return new Promise(resolve => requestAnimationFrame(() => resolve()));\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    color: \"#888\",\n    marginTop: 5\n  }\n});\n"]},"metadata":{},"sourceType":"module"}