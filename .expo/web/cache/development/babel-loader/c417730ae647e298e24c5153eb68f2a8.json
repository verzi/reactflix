{"ast":null,"code":"var _jsxFileName = \"C:\\\\distribuidas\\\\apps\\\\sarasapp\\\\app\\\\components\\\\cards\\\\rows\\\\PersonRow\\\\index.js\";\nimport React, { memo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacity } from \"../../../common/TouchableOpacity\";\nimport { getImageApi } from \"../../../../utils/images\";\nimport styles from \"./styles\";\nvar uninformed = 'Uninformed';\nvar PersonRow = memo(function (_ref) {\n  var type = _ref.type,\n      item = _ref.item,\n      onTeamDetail = _ref.onTeamDetail;\n  return React.createElement(React.Fragment, null, type === 'character' || type === 'job' ? React.createElement(TouchableOpacity, {\n    style: styles.containerCast,\n    onPress: function onPress() {\n      return onTeamDetail(item.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, type === 'character' && React.createElement(Text, {\n    numberOfLines: 1,\n    style: [styles.titleCast, styles.titleCharacter],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, item.character || uninformed), type === 'job' && React.createElement(Text, {\n    numberOfLines: 1,\n    style: [styles.titleCast, styles.titleCharacter],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, item.job || uninformed), React.createElement(Image, {\n    source: getImageApi(item.profile_path),\n    style: styles.castPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.titleCast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, item.name || uninformed)) : React.createElement(View, {\n    style: styles.containerCast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: getImageApi(item.logo_path),\n    style: styles.productionCompaniesPhoto,\n    resizeMode: \"contain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.titleCast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, item.name || uninformed)));\n}, function (prevProps, nextProps) {\n  return prevProps.item.id === nextProps.item.id;\n});\nexport default PersonRow;","map":{"version":3,"sources":["C:/distribuidas/apps/sarasapp/app/components/cards/rows/PersonRow/index.js"],"names":["React","memo","TouchableOpacity","getImageApi","styles","uninformed","PersonRow","type","item","onTeamDetail","containerCast","id","titleCast","titleCharacter","character","job","profile_path","castPhoto","name","logo_path","productionCompaniesPhoto","prevProps","nextProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;;AAGA,SAASC,gBAAT;AAEA,SAASC,WAAT;AAEA,OAAOC,MAAP;AAEA,IAAMC,UAAU,GAAG,YAAnB;AAEA,IAAMC,SAAS,GAAGL,IAAI,CACpB;AAAA,MAAGM,IAAH,QAAGA,IAAH;AAAA,MAASC,IAAT,QAASA,IAAT;AAAA,MAAeC,YAAf,QAAeA,YAAf;AAAA,SACE,0CACGF,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,KAAjC,GACC,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACM,aADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,YAAY,CAACD,IAAI,CAACG,EAAN,CAAlB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,IAAI,KAAK,WAAT,IACC,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,KAAK,EAAE,CAACH,MAAM,CAACQ,SAAR,EAAmBR,MAAM,CAACS,cAA1B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,IAAI,CAACM,SAAL,IAAkBT,UAJrB,CALJ,EAYGE,IAAI,KAAK,KAAT,IACC,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,KAAK,EAAE,CAACH,MAAM,CAACQ,SAAR,EAAmBR,MAAM,CAACS,cAA1B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,IAAI,CAACO,GAAL,IAAYV,UAJf,CAbJ,EAoBE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEF,WAAW,CAACK,IAAI,CAACQ,YAAN,CADrB;AAEE,IAAA,KAAK,EAAEZ,MAAM,CAACa,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAwBE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAEb,MAAM,CAACQ,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACU,IAAL,IAAab,UADhB,CAxBF,CADD,GA8BC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEP,WAAW,CAACK,IAAI,CAACW,SAAN,CADrB;AAEE,IAAA,KAAK,EAAEf,MAAM,CAACgB,wBAFhB;AAGE,IAAA,UAAU,EAAC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAEhB,MAAM,CAACQ,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACU,IAAL,IAAab,UADhB,CANF,CA/BJ,CADF;AAAA,CADoB,EA8CpB,UAACgB,SAAD,EAAYC,SAAZ;AAAA,SAA0BD,SAAS,CAACb,IAAV,CAAeG,EAAf,KAAsBW,SAAS,CAACd,IAAV,CAAeG,EAA/D;AAAA,CA9CoB,CAAtB;AAiDA,eAAeL,SAAf","sourcesContent":["import React, { memo } from 'react';\nimport { View, Text, Image } from 'react-native';\n\nimport { TouchableOpacity } from '../../../common/TouchableOpacity';\n\nimport { getImageApi } from '../../../../utils/images';\n\nimport styles from './styles';\n\nconst uninformed = 'Uninformed';\n\nconst PersonRow = memo(\n  ({ type, item, onTeamDetail }) => (\n    <>\n      {type === 'character' || type === 'job' ? (\n        <TouchableOpacity\n          style={styles.containerCast}\n          onPress={() => onTeamDetail(item.id)}\n        >\n          {type === 'character' && (\n            <Text\n              numberOfLines={1}\n              style={[styles.titleCast, styles.titleCharacter]}\n            >\n              {item.character || uninformed}\n            </Text>\n          )}\n          {type === 'job' && (\n            <Text\n              numberOfLines={1}\n              style={[styles.titleCast, styles.titleCharacter]}\n            >\n              {item.job || uninformed}\n            </Text>\n          )}\n          <Image\n            source={getImageApi(item.profile_path)}\n            style={styles.castPhoto}\n          />\n          <Text numberOfLines={1} style={styles.titleCast}>\n            {item.name || uninformed}\n          </Text>\n        </TouchableOpacity>\n      ) : (\n        <View style={styles.containerCast}>\n          <Image\n            source={getImageApi(item.logo_path)}\n            style={styles.productionCompaniesPhoto}\n            resizeMode=\"contain\"\n          />\n          <Text numberOfLines={2} style={styles.titleCast}>\n            {item.name || uninformed}\n          </Text>\n        </View>\n      )}\n    </>\n  ),\n  (prevProps, nextProps) => prevProps.item.id === nextProps.item.id\n);\n\nexport default PersonRow;\n"]},"metadata":{},"sourceType":"module"}